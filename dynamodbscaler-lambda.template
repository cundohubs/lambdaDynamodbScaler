{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Deploys a lambda function",  
  "Parameters" : {
    "LambdaFunctionZipFile": {
      "Type": "String",
      "Default": "dynamodbscaler/lambdaDynamodbScaler.zip",
      "AllowedPattern": "[-_./a-zA-Z0-9]*",
      "ConstraintDescription": "must be a zip file stored in an S3 Bucket."
    },
    "S3Bucket": {
      "Description" : "S3 bucket for storing configurations",
      "Type" : "String",
      "Default" : "curalate-configuration-qa",
      "ConstraintDescription" : "Must be a valid S3 Bucket"
    },
    "JavaPackageName": {
      "Description" : "Name of Java package",
      "Type" : "String",
      "Default": "be.quodlibet.lambdadynamodbscaler.Scaler",
      "ConstraintDescription" : "Must be a valid Java package name",
      "AllowedPattern": "[-_.a-zA-Z0-9]*"
    },
    "JavaHandlerName": {
      "Description" : "Name of Java handler method name",
      "Type" : "String",
      "Default": "scale",
      "ConstraintDescription" : "Must be a valid Java handler name",
      "AllowedPattern": "[-_.a-zA-Z0-9]*"
    },
    "LambdaRuntime": {
      "Description" : "Runtime for Lambda function",
      "Type" : "String",
      "Default" : "java8",
      "AllowedValues" : [ "java8", "nodejs", "python2.7" ],
      "ConstraintDescription" : "Must be a valid S3 Bucket"
    }
  },
  
  "Mappings" : {
  },
  
  "Resources" : {
    "LambdaFunction": {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket": { "Ref": "S3Bucket" },
          "S3Key": { "Ref": "LambdaFunctionZipFile" }
        },
        "Description" : "Lambda function",
        "Handler" : { "Fn::Join": [ "::", [ { "Ref": "JavaPackageName" }, { "Ref": "JavaHandlerName" }  ] ] },
        "Role" : { "Fn::GetAtt": [ "LambdaFunctionRole", "Arn" ] },
        "Runtime" : "java8",
        "Timeout" : 25
      }
    },
    
    "LambdaFunctionRole": {
      "Type": "AWS::IAM::Role",
      "DeletionPolicy" : "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "lambda.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "ManagedPolicyArns": [ ],
        "Path": "/Curalate/",
        "Policies": [ {
          "PolicyName": "DynamoDBScaler",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:Describe*",
                  "dynamodb:List*",
                  "dynamodb:UpdateTable",
                  "cloudwatch:GetMetricStatistics",
                  "s3:PutObject",
                  "s3:List*",
                  "s3:Get*"
                ],
                "Resource": ["*"]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "sns:Publish"
                ],
                "Resource": [
                  "arn:aws:sns:*::dynamic-dynamodb"
                ]
              }
            ]
          }
        } ]
      }
    },
    
    "LambdaFunctionCloudwatchAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": { "Fn::Join": ["", [ "Alarm if Lambda Function is failing" ]]},
        "Namespace": "AWS/Lambda",
        "MetricName": "Errors",
        "Dimensions": [{
          "Name": "FunctionName",
          "Value" : { "Ref": "LambdaFunction" }
        }],
        "EvaluationPeriods": "1",
        "Statistic": "Sum",
        "Period": "300",
        "Threshold": "1",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold"
      }
    }
  },
  
  "Outputs" : {
    "LambdaFunctionArn": {
      "Description" : "ARN of Lambda function",
      "Value" : { "Fn::GetAtt": [ "LambdaFunction", "Arn" ] }
      
    }
  }
  
}